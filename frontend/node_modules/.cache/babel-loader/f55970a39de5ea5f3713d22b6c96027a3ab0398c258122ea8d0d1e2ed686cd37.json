{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:8000';const api=axios.create({baseURL:`${API_BASE_URL}/api/v1`,headers:{'Content-Type':'application/json'}});// Add auth token to requests\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;});export const tenantService={// Get all tenants for the current landlord\nasync getTenants(){const response=await api.get('/tenants');return response.data;},// Get a single tenant by ID\nasync getTenant(id){const response=await api.get(`/tenants/${id}`);return response.data;},// Create a new tenant\nasync createTenant(tenant){const response=await api.post('/tenants',tenant);return response.data;},// Update an existing tenant\nasync updateTenant(tenant){const response=await api.put(`/tenants/${tenant.id}`,tenant);return response.data;},// Delete a tenant\nasync deleteTenant(id){await api.delete(`/tenants/${id}`);},// Upload tenant documents\nasync uploadDocuments(tenantId,files){const formData=new FormData();files.forEach(file=>{formData.append('documents',file);});const response=await api.post(`/tenants/${tenantId}/documents`,formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data.documentUrls;},// Delete tenant document\nasync deleteDocument(tenantId,documentUrl){await api.delete(`/tenants/${tenantId}/documents`,{data:{documentUrl}});},// Get tenants by property\nasync getTenantsByProperty(propertyId){const response=await api.get(`/properties/${propertyId}/tenants`);return response.data;}};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}