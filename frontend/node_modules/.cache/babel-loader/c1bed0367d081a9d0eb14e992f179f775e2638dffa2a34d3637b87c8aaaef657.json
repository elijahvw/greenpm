{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: `${API_BASE_URL}/api/v1`,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const propertyService = {\n  // Get all properties for the current landlord\n  async getProperties() {\n    console.log('üè† PropertyService: Fetching properties from:', `${API_BASE_URL}/api/v1/properties`);\n    const response = await api.get('/properties');\n    console.log('üè† PropertyService: Response:', response.data);\n    return response.data;\n  },\n  // Get a single property by ID\n  async getProperty(id) {\n    const response = await api.get(`/properties/${id}`);\n    return response.data;\n  },\n  // Create a new property\n  async createProperty(property) {\n    const response = await api.post('/properties', property);\n    return response.data;\n  },\n  // Update an existing property\n  async updateProperty(property) {\n    const response = await api.put(`/properties/${property.id}`, property);\n    return response.data;\n  },\n  // Delete a property\n  async deleteProperty(id) {\n    await api.delete(`/properties/${id}`);\n  },\n  // Upload property images\n  async uploadImages(propertyId, files) {\n    const formData = new FormData();\n    files.forEach(file => {\n      formData.append('images', file);\n    });\n    const response = await api.post(`/properties/${propertyId}/images`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data.imageUrls;\n  },\n  // Delete property image\n  async deleteImage(propertyId, imageUrl) {\n    await api.delete(`/properties/${propertyId}/images`, {\n      data: {\n        imageUrl\n      }\n    });\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","propertyService","getProperties","console","log","response","get","data","getProperty","id","createProperty","property","post","updateProperty","put","deleteProperty","delete","uploadImages","propertyId","files","formData","FormData","forEach","file","append","imageUrls","deleteImage","imageUrl"],"sources":["/Users/elijahward/Documents/greenpm/frontend/src/services/propertyService.ts"],"sourcesContent":["import axios from 'axios';\nimport { Property, CreatePropertyRequest, UpdatePropertyRequest } from '../types/property';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nconst api = axios.create({\n  baseURL: `${API_BASE_URL}/api/v1`,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add auth token to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\nexport const propertyService = {\n  // Get all properties for the current landlord\n  async getProperties(): Promise<Property[]> {\n    console.log('üè† PropertyService: Fetching properties from:', `${API_BASE_URL}/api/v1/properties`);\n    const response = await api.get('/properties');\n    console.log('üè† PropertyService: Response:', response.data);\n    return response.data;\n  },\n\n  // Get a single property by ID\n  async getProperty(id: string): Promise<Property> {\n    const response = await api.get(`/properties/${id}`);\n    return response.data;\n  },\n\n  // Create a new property\n  async createProperty(property: CreatePropertyRequest): Promise<Property> {\n    const response = await api.post('/properties', property);\n    return response.data;\n  },\n\n  // Update an existing property\n  async updateProperty(property: UpdatePropertyRequest): Promise<Property> {\n    const response = await api.put(`/properties/${property.id}`, property);\n    return response.data;\n  },\n\n  // Delete a property\n  async deleteProperty(id: string): Promise<void> {\n    await api.delete(`/properties/${id}`);\n  },\n\n  // Upload property images\n  async uploadImages(propertyId: string, files: File[]): Promise<string[]> {\n    const formData = new FormData();\n    files.forEach((file) => {\n      formData.append('images', file);\n    });\n\n    const response = await api.post(`/properties/${propertyId}/images`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data.imageUrls;\n  },\n\n  // Delete property image\n  async deleteImage(propertyId: string, imageUrl: string): Promise<void> {\n    await api.delete(`/properties/${propertyId}/images`, {\n      data: { imageUrl },\n    });\n  },\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAE7E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAE,GAAGN,YAAY,SAAS;EACjCO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMK,eAAe,GAAG;EAC7B;EACA,MAAMC,aAAaA,CAAA,EAAwB;IACzCC,OAAO,CAACC,GAAG,CAAC,+CAA+C,EAAE,GAAGnB,YAAY,oBAAoB,CAAC;IACjG,MAAMoB,QAAQ,GAAG,MAAMhB,GAAG,CAACiB,GAAG,CAAC,aAAa,CAAC;IAC7CH,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEC,QAAQ,CAACE,IAAI,CAAC;IAC3D,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACA,MAAMC,WAAWA,CAACC,EAAU,EAAqB;IAC/C,MAAMJ,QAAQ,GAAG,MAAMhB,GAAG,CAACiB,GAAG,CAAC,eAAeG,EAAE,EAAE,CAAC;IACnD,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACA,MAAMG,cAAcA,CAACC,QAA+B,EAAqB;IACvE,MAAMN,QAAQ,GAAG,MAAMhB,GAAG,CAACuB,IAAI,CAAC,aAAa,EAAED,QAAQ,CAAC;IACxD,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACA,MAAMM,cAAcA,CAACF,QAA+B,EAAqB;IACvE,MAAMN,QAAQ,GAAG,MAAMhB,GAAG,CAACyB,GAAG,CAAC,eAAeH,QAAQ,CAACF,EAAE,EAAE,EAAEE,QAAQ,CAAC;IACtE,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACA,MAAMQ,cAAcA,CAACN,EAAU,EAAiB;IAC9C,MAAMpB,GAAG,CAAC2B,MAAM,CAAC,eAAeP,EAAE,EAAE,CAAC;EACvC,CAAC;EAED;EACA,MAAMQ,YAAYA,CAACC,UAAkB,EAAEC,KAAa,EAAqB;IACvE,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BF,KAAK,CAACG,OAAO,CAAEC,IAAI,IAAK;MACtBH,QAAQ,CAACI,MAAM,CAAC,QAAQ,EAAED,IAAI,CAAC;IACjC,CAAC,CAAC;IAEF,MAAMlB,QAAQ,GAAG,MAAMhB,GAAG,CAACuB,IAAI,CAAC,eAAeM,UAAU,SAAS,EAAEE,QAAQ,EAAE;MAC5E5B,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOa,QAAQ,CAACE,IAAI,CAACkB,SAAS;EAChC,CAAC;EAED;EACA,MAAMC,WAAWA,CAACR,UAAkB,EAAES,QAAgB,EAAiB;IACrE,MAAMtC,GAAG,CAAC2B,MAAM,CAAC,eAAeE,UAAU,SAAS,EAAE;MACnDX,IAAI,EAAE;QAAEoB;MAAS;IACnB,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}