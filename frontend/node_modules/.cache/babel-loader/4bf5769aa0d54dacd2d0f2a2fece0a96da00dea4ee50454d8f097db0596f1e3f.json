{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'https://greenpm-dev-backend-working-yvfzslnr7a-uc.a.run.app';const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Add auth token to requests\napi.interceptors.request.use(config=>{const token=localStorage.getItem('authToken');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;});export const leaseService={// Get all leases for the current landlord\nasync getLeases(){const response=await api.get('/api/v1/leases');return response.data;},// Get a single lease by ID\nasync getLease(id){const response=await api.get(`/api/v1/leases/${id}`);return response.data;},// Create a new lease\nasync createLease(lease){const response=await api.post('/api/v1/leases',lease);return response.data;},// Update an existing lease\nasync updateLease(lease){const response=await api.put(`/api/v1/leases/${lease.id}`,lease);return response.data;},// Delete a lease\nasync deleteLease(id){await api.delete(`/api/v1/leases/${id}`);},// Get leases by property\nasync getLeasesByProperty(propertyId){const response=await api.get(`/api/v1/leases?propertyId=${propertyId}`);return response.data;},// Get leases by tenant\nasync getLeasesByTenant(tenantId){const response=await api.get(`/api/v1/leases?tenantId=${tenantId}`);return response.data;},// Get active leases\nasync getActiveLeases(){const response=await api.get('/api/v1/leases?status=active');return response.data;},// Get expiring leases (within specified days)\nasync getExpiringLeases(){let days=arguments.length>0&&arguments[0]!==undefined?arguments[0]:30;const response=await api.get(`/api/v1/leases/expiring?days=${days}`);return response.data;},// Terminate a lease\nasync terminateLease(leaseId,termination){const response=await api.post(`/api/v1/leases/${leaseId}/terminate`,termination);return response.data;},// Renew a lease\nasync renewLease(leaseId,renewal){const response=await api.post(`/api/v1/leases/${leaseId}/renew`,renewal);return response.data;},// Upload lease documents\nasync uploadDocuments(leaseId,files){const formData=new FormData();files.forEach(file=>{formData.append('documents',file);});const response=await api.post(`/api/v1/leases/${leaseId}/documents`,formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data.documentUrls;},// Delete lease document\nasync deleteDocument(leaseId,documentUrl){await api.delete(`/api/v1/leases/${leaseId}/documents`,{data:{documentUrl}});},// Generate lease document\nasync generateLeaseDocument(leaseId){const response=await api.post(`/api/v1/leases/${leaseId}/generate-document`);return response.data.documentUrl;},// Sign lease\nasync signLease(leaseId,signatureData){const response=await api.post(`/api/v1/leases/${leaseId}/sign`,signatureData);return response.data;}};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","leaseService","getLeases","response","get","data","getLease","id","createLease","lease","post","updateLease","put","deleteLease","delete","getLeasesByProperty","propertyId","getLeasesByTenant","tenantId","getActiveLeases","getExpiringLeases","days","arguments","length","undefined","terminateLease","leaseId","termination","renewLease","renewal","uploadDocuments","files","formData","FormData","forEach","file","append","documentUrls","deleteDocument","documentUrl","generateLeaseDocument","signLease","signatureData"],"sources":["/Users/elijahward/Documents/greenpm/frontend/src/services/leaseService.ts"],"sourcesContent":["import axios from 'axios';\nimport { Lease, CreateLeaseRequest, UpdateLeaseRequest, LeaseRenewal, LeaseTermination } from '../types/lease';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'https://greenpm-dev-backend-working-yvfzslnr7a-uc.a.run.app';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add auth token to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\nexport const leaseService = {\n  // Get all leases for the current landlord\n  async getLeases(): Promise<Lease[]> {\n    const response = await api.get('/api/v1/leases');\n    return response.data;\n  },\n\n  // Get a single lease by ID\n  async getLease(id: string): Promise<Lease> {\n    const response = await api.get(`/api/v1/leases/${id}`);\n    return response.data;\n  },\n\n  // Create a new lease\n  async createLease(lease: CreateLeaseRequest): Promise<Lease> {\n    const response = await api.post('/api/v1/leases', lease);\n    return response.data;\n  },\n\n  // Update an existing lease\n  async updateLease(lease: UpdateLeaseRequest): Promise<Lease> {\n    const response = await api.put(`/api/v1/leases/${lease.id}`, lease);\n    return response.data;\n  },\n\n  // Delete a lease\n  async deleteLease(id: string): Promise<void> {\n    await api.delete(`/api/v1/leases/${id}`);\n  },\n\n  // Get leases by property\n  async getLeasesByProperty(propertyId: string): Promise<Lease[]> {\n    const response = await api.get(`/api/v1/leases?propertyId=${propertyId}`);\n    return response.data;\n  },\n\n  // Get leases by tenant\n  async getLeasesByTenant(tenantId: string): Promise<Lease[]> {\n    const response = await api.get(`/api/v1/leases?tenantId=${tenantId}`);\n    return response.data;\n  },\n\n  // Get active leases\n  async getActiveLeases(): Promise<Lease[]> {\n    const response = await api.get('/api/v1/leases?status=active');\n    return response.data;\n  },\n\n  // Get expiring leases (within specified days)\n  async getExpiringLeases(days: number = 30): Promise<Lease[]> {\n    const response = await api.get(`/api/v1/leases/expiring?days=${days}`);\n    return response.data;\n  },\n\n  // Terminate a lease\n  async terminateLease(leaseId: string, termination: Omit<LeaseTermination, 'id' | 'leaseId' | 'createdAt'>): Promise<LeaseTermination> {\n    const response = await api.post(`/api/v1/leases/${leaseId}/terminate`, termination);\n    return response.data;\n  },\n\n  // Renew a lease\n  async renewLease(leaseId: string, renewal: Omit<LeaseRenewal, 'id' | 'originalLeaseId' | 'createdAt'>): Promise<LeaseRenewal> {\n    const response = await api.post(`/api/v1/leases/${leaseId}/renew`, renewal);\n    return response.data;\n  },\n\n  // Upload lease documents\n  async uploadDocuments(leaseId: string, files: File[]): Promise<string[]> {\n    const formData = new FormData();\n    files.forEach((file) => {\n      formData.append('documents', file);\n    });\n\n    const response = await api.post(`/api/v1/leases/${leaseId}/documents`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data.documentUrls;\n  },\n\n  // Delete lease document\n  async deleteDocument(leaseId: string, documentUrl: string): Promise<void> {\n    await api.delete(`/api/v1/leases/${leaseId}/documents`, {\n      data: { documentUrl },\n    });\n  },\n\n  // Generate lease document\n  async generateLeaseDocument(leaseId: string): Promise<string> {\n    const response = await api.post(`/api/v1/leases/${leaseId}/generate-document`);\n    return response.data.documentUrl;\n  },\n\n  // Sign lease\n  async signLease(leaseId: string, signatureData: { signature: string; signedBy: string }): Promise<Lease> {\n    const response = await api.post(`/api/v1/leases/${leaseId}/sign`, signatureData);\n    return response.data;\n  },\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}