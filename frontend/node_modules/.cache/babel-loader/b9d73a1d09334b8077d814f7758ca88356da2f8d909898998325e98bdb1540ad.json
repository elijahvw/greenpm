{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'https://greenpm-dev-backend-working-yvfzslnr7a-uc.a.run.app';const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Add auth token to requests\napi.interceptors.request.use(config=>{const token=localStorage.getItem('authToken');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;});export const tenantService={// Get all tenants for the current landlord\nasync getTenants(){const response=await api.get('/api/v1/tenants');return response.data;},// Get a single tenant by ID\nasync getTenant(id){const response=await api.get(`/api/v1/tenants/${id}`);return response.data;},// Create a new tenant\nasync createTenant(tenant){const response=await api.post('/api/v1/tenants',tenant);return response.data;},// Update an existing tenant\nasync updateTenant(tenant){const response=await api.put(`/api/v1/tenants/${tenant.id}`,tenant);return response.data;},// Delete a tenant\nasync deleteTenant(id){await api.delete(`/api/v1/tenants/${id}`);},// Upload tenant documents\nasync uploadDocuments(tenantId,files){const formData=new FormData();files.forEach(file=>{formData.append('documents',file);});const response=await api.post(`/api/v1/tenants/${tenantId}/documents`,formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data.documentUrls;},// Delete tenant document\nasync deleteDocument(tenantId,documentUrl){await api.delete(`/api/v1/tenants/${tenantId}/documents`,{data:{documentUrl}});},// Get tenants by property\nasync getTenantsByProperty(propertyId){const response=await api.get(`/api/v1/properties/${propertyId}/tenants`);return response.data;}};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","tenantService","getTenants","response","get","data","getTenant","id","createTenant","tenant","post","updateTenant","put","deleteTenant","delete","uploadDocuments","tenantId","files","formData","FormData","forEach","file","append","documentUrls","deleteDocument","documentUrl","getTenantsByProperty","propertyId"],"sources":["/Users/elijahward/Documents/greenpm/frontend/src/services/tenantService.ts"],"sourcesContent":["import axios from 'axios';\nimport { Tenant, CreateTenantRequest, UpdateTenantRequest } from '../types/tenant';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'https://greenpm-dev-backend-working-yvfzslnr7a-uc.a.run.app';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add auth token to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\nexport const tenantService = {\n  // Get all tenants for the current landlord\n  async getTenants(): Promise<Tenant[]> {\n    const response = await api.get('/api/v1/tenants');\n    return response.data;\n  },\n\n  // Get a single tenant by ID\n  async getTenant(id: string): Promise<Tenant> {\n    const response = await api.get(`/api/v1/tenants/${id}`);\n    return response.data;\n  },\n\n  // Create a new tenant\n  async createTenant(tenant: CreateTenantRequest): Promise<Tenant> {\n    const response = await api.post('/api/v1/tenants', tenant);\n    return response.data;\n  },\n\n  // Update an existing tenant\n  async updateTenant(tenant: UpdateTenantRequest): Promise<Tenant> {\n    const response = await api.put(`/api/v1/tenants/${tenant.id}`, tenant);\n    return response.data;\n  },\n\n  // Delete a tenant\n  async deleteTenant(id: string): Promise<void> {\n    await api.delete(`/api/v1/tenants/${id}`);\n  },\n\n  // Upload tenant documents\n  async uploadDocuments(tenantId: string, files: File[]): Promise<string[]> {\n    const formData = new FormData();\n    files.forEach((file) => {\n      formData.append('documents', file);\n    });\n\n    const response = await api.post(`/api/v1/tenants/${tenantId}/documents`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data.documentUrls;\n  },\n\n  // Delete tenant document\n  async deleteDocument(tenantId: string, documentUrl: string): Promise<void> {\n    await api.delete(`/api/v1/tenants/${tenantId}/documents`, {\n      data: { documentUrl },\n    });\n  },\n\n  // Get tenants by property\n  async getTenantsByProperty(propertyId: string): Promise<Tenant[]> {\n    const response = await api.get(`/api/v1/properties/${propertyId}/tenants`);\n    return response.data;\n  },\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}