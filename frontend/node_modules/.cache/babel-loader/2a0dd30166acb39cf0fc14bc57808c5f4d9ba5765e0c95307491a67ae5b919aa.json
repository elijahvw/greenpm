{"ast":null,"code":"var _jsxFileName = \"/Users/elijahward/Documents/greenpm/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { api } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (token) {\n      validateToken();\n    } else {\n      setLoading(false);\n    }\n  }, [token]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const validateToken = async () => {\n    try {\n      const response = await api.get('/auth/me');\n      setUser(response.data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Token validation failed:', error);\n      logout();\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await api.post('/auth/login', {\n        email,\n        password\n      });\n      const {\n        access_token,\n        user: userData\n      } = response.data;\n      setToken(access_token);\n      setUser(userData);\n      localStorage.setItem('token', access_token);\n\n      // Set default authorization header\n      api.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Login failed');\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      const {\n        access_token,\n        user: newUser\n      } = response.data;\n      setToken(access_token);\n      setUser(newUser);\n      localStorage.setItem('token', access_token);\n\n      // Set default authorization header\n      api.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Registration failed');\n    }\n  };\n  const logout = async () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.clear(); // Clear all localStorage\n    delete api.defaults.headers.common['Authorization'];\n\n    // Force redirect to login\n    window.location.href = '/login';\n  };\n  const updateProfile = async userData => {\n    try {\n      const response = await api.put('/users/profile', userData);\n      setUser(response.data);\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || 'Profile update failed');\n    }\n  };\n  const value = {\n    user,\n    token,\n    isAuthenticated: !!token && !!user,\n    loading,\n    login,\n    logout,\n    register,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"6yaUUgx9bt/8SVo6kb7BgPC/qRU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","api","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","validateToken","response","get","data","error","console","logout","login","email","password","post","access_token","userData","setItem","defaults","headers","common","_error$response","_error$response$data","detail","register","newUser","_error$response2","_error$response2$data","removeItem","clear","window","location","href","updateProfile","put","_error$response3","_error$response3$data","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/elijahward/Documents/greenpm/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { api } from '../services/api';\n\ninterface User {\n  id: string;\n  email: string;\n  first_name: string;\n  last_name: string;\n  role: string;\n  is_active: boolean;\n  phone?: string;\n  address?: string;\n  created_at?: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  token: string | null;\n  isAuthenticated: boolean;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  logout: () => Promise<void>;\n  register: (userData: any) => Promise<void>;\n  updateProfile: (userData: any) => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [token, setToken] = useState<string | null>(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (token) {\n      validateToken();\n    } else {\n      setLoading(false);\n    }\n  }, [token]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const validateToken = async () => {\n    try {\n      const response = await api.get('/auth/me');\n      setUser(response.data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Token validation failed:', error);\n      logout();\n    }\n  };\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await api.post('/auth/login', { email, password });\n      const { access_token, user: userData } = response.data;\n      \n      setToken(access_token);\n      setUser(userData);\n      localStorage.setItem('token', access_token);\n      \n      // Set default authorization header\n      api.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n    } catch (error: any) {\n      throw new Error(error.response?.data?.detail || 'Login failed');\n    }\n  };\n\n  const register = async (userData: any) => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      const { access_token, user: newUser } = response.data;\n      \n      setToken(access_token);\n      setUser(newUser);\n      localStorage.setItem('token', access_token);\n      \n      // Set default authorization header\n      api.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n    } catch (error: any) {\n      throw new Error(error.response?.data?.detail || 'Registration failed');\n    }\n  };\n\n  const logout = async () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.clear(); // Clear all localStorage\n    delete api.defaults.headers.common['Authorization'];\n    \n    // Force redirect to login\n    window.location.href = '/login';\n  };\n\n  const updateProfile = async (userData: any) => {\n    try {\n      const response = await api.put('/users/profile', userData);\n      setUser(response.data);\n    } catch (error: any) {\n      throw new Error(error.response?.data?.detail || 'Profile update failed');\n    }\n  };\n\n  const value: AuthContextType = {\n    user,\n    token,\n    isAuthenticated: !!token && !!user,\n    loading,\n    login,\n    logout,\n    register,\n    updateProfile,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}