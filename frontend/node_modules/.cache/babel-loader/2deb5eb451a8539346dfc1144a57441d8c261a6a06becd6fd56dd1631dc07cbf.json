{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'https://greenpm-dev-backend-working-yvfzslnr7a-uc.a.run.app';const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Add auth token to requests\napi.interceptors.request.use(config=>{const token=localStorage.getItem('authToken');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;});export const propertyService={// Get all properties for the current landlord\nasync getProperties(){const response=await api.get('/api/v1/properties');return response.data;},// Get a single property by ID\nasync getProperty(id){const response=await api.get(`/api/v1/properties/${id}`);return response.data;},// Create a new property\nasync createProperty(property){const response=await api.post('/api/v1/properties',property);return response.data;},// Update an existing property\nasync updateProperty(property){const response=await api.put(`/api/v1/properties/${property.id}`,property);return response.data;},// Delete a property\nasync deleteProperty(id){await api.delete(`/api/v1/properties/${id}`);},// Upload property images\nasync uploadImages(propertyId,files){const formData=new FormData();files.forEach(file=>{formData.append('images',file);});const response=await api.post(`/api/v1/properties/${propertyId}/images`,formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data.imageUrls;},// Delete property image\nasync deleteImage(propertyId,imageUrl){await api.delete(`/api/v1/properties/${propertyId}/images`,{data:{imageUrl}});}};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","propertyService","getProperties","response","get","data","getProperty","id","createProperty","property","post","updateProperty","put","deleteProperty","delete","uploadImages","propertyId","files","formData","FormData","forEach","file","append","imageUrls","deleteImage","imageUrl"],"sources":["/Users/elijahward/Documents/greenpm/frontend/src/services/propertyService.ts"],"sourcesContent":["import axios from 'axios';\nimport { Property, CreatePropertyRequest, UpdatePropertyRequest } from '../types/property';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'https://greenpm-dev-backend-working-yvfzslnr7a-uc.a.run.app';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add auth token to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\nexport const propertyService = {\n  // Get all properties for the current landlord\n  async getProperties(): Promise<Property[]> {\n    const response = await api.get('/api/v1/properties');\n    return response.data;\n  },\n\n  // Get a single property by ID\n  async getProperty(id: string): Promise<Property> {\n    const response = await api.get(`/api/v1/properties/${id}`);\n    return response.data;\n  },\n\n  // Create a new property\n  async createProperty(property: CreatePropertyRequest): Promise<Property> {\n    const response = await api.post('/api/v1/properties', property);\n    return response.data;\n  },\n\n  // Update an existing property\n  async updateProperty(property: UpdatePropertyRequest): Promise<Property> {\n    const response = await api.put(`/api/v1/properties/${property.id}`, property);\n    return response.data;\n  },\n\n  // Delete a property\n  async deleteProperty(id: string): Promise<void> {\n    await api.delete(`/api/v1/properties/${id}`);\n  },\n\n  // Upload property images\n  async uploadImages(propertyId: string, files: File[]): Promise<string[]> {\n    const formData = new FormData();\n    files.forEach((file) => {\n      formData.append('images', file);\n    });\n\n    const response = await api.post(`/api/v1/properties/${propertyId}/images`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data.imageUrls;\n  },\n\n  // Delete property image\n  async deleteImage(propertyId: string, imageUrl: string): Promise<void> {\n    await api.delete(`/api/v1/properties/${propertyId}/images`, {\n      data: { imageUrl },\n    });\n  },\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAGzB,KAAM,CAAAC,YAAY,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,6DAA6D,CAEnH,KAAM,CAAAC,GAAG,CAAGL,KAAK,CAACM,MAAM,CAAC,CACvBC,OAAO,CAAEN,YAAY,CACrBO,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,EAAK,CACvC,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAC/C,GAAIF,KAAK,CAAE,CACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,CAAG,UAAUH,KAAK,EAAE,CAClD,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAK,eAAe,CAAG,CAC7B;AACA,KAAM,CAAAC,aAAaA,CAAA,CAAwB,CACzC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAd,GAAG,CAACe,GAAG,CAAC,oBAAoB,CAAC,CACpD,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACA,KAAM,CAAAC,WAAWA,CAACC,EAAU,CAAqB,CAC/C,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAd,GAAG,CAACe,GAAG,CAAC,sBAAsBG,EAAE,EAAE,CAAC,CAC1D,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACA,KAAM,CAAAG,cAAcA,CAACC,QAA+B,CAAqB,CACvE,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAd,GAAG,CAACqB,IAAI,CAAC,oBAAoB,CAAED,QAAQ,CAAC,CAC/D,MAAO,CAAAN,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACA,KAAM,CAAAM,cAAcA,CAACF,QAA+B,CAAqB,CACvE,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAd,GAAG,CAACuB,GAAG,CAAC,sBAAsBH,QAAQ,CAACF,EAAE,EAAE,CAAEE,QAAQ,CAAC,CAC7E,MAAO,CAAAN,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACA,KAAM,CAAAQ,cAAcA,CAACN,EAAU,CAAiB,CAC9C,KAAM,CAAAlB,GAAG,CAACyB,MAAM,CAAC,sBAAsBP,EAAE,EAAE,CAAC,CAC9C,CAAC,CAED;AACA,KAAM,CAAAQ,YAAYA,CAACC,UAAkB,CAAEC,KAAa,CAAqB,CACvE,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BF,KAAK,CAACG,OAAO,CAAEC,IAAI,EAAK,CACtBH,QAAQ,CAACI,MAAM,CAAC,QAAQ,CAAED,IAAI,CAAC,CACjC,CAAC,CAAC,CAEF,KAAM,CAAAlB,QAAQ,CAAG,KAAM,CAAAd,GAAG,CAACqB,IAAI,CAAC,sBAAsBM,UAAU,SAAS,CAAEE,QAAQ,CAAE,CACnF1B,OAAO,CAAE,CACP,cAAc,CAAE,qBAClB,CACF,CAAC,CAAC,CACF,MAAO,CAAAW,QAAQ,CAACE,IAAI,CAACkB,SAAS,CAChC,CAAC,CAED;AACA,KAAM,CAAAC,WAAWA,CAACR,UAAkB,CAAES,QAAgB,CAAiB,CACrE,KAAM,CAAApC,GAAG,CAACyB,MAAM,CAAC,sBAAsBE,UAAU,SAAS,CAAE,CAC1DX,IAAI,CAAE,CAAEoB,QAAS,CACnB,CAAC,CAAC,CACJ,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}