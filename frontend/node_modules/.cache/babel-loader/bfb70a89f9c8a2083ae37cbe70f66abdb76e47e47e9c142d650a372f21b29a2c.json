{"ast":null,"code":"// Utility functions for JWT token handling\n\nexport const isTokenExpired = token => {\n  try {\n    // Decode JWT token (without verification)\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(atob(base64).split('').map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)).join(''));\n    const payload = JSON.parse(jsonPayload);\n    const currentTime = Math.floor(Date.now() / 1000);\n    console.log('üîç Token payload:', payload);\n    console.log('üîç Current time:', currentTime);\n    console.log('üîç Token expires at:', payload.exp);\n    console.log('üîç Time until expiration:', payload.exp - currentTime, 'seconds');\n    return payload.exp < currentTime;\n  } catch (error) {\n    console.error('‚ùå Error parsing token:', error);\n    return true; // Assume expired if we can't parse it\n  }\n};\nexport const getTokenTimeUntilExpiration = token => {\n  try {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(atob(base64).split('').map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)).join(''));\n    const payload = JSON.parse(jsonPayload);\n    const currentTime = Math.floor(Date.now() / 1000);\n    return payload.exp - currentTime; // seconds until expiration\n  } catch (error) {\n    return 0;\n  }\n};","map":{"version":3,"names":["isTokenExpired","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","payload","JSON","parse","currentTime","Math","floor","Date","now","console","log","exp","error","getTokenTimeUntilExpiration"],"sources":["/Users/elijahward/Documents/greenpm/frontend/src/utils/token.ts"],"sourcesContent":["// Utility functions for JWT token handling\n\nexport const isTokenExpired = (token: string): boolean => {\n  try {\n    // Decode JWT token (without verification)\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n      atob(base64)\n        .split('')\n        .map((c) => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2))\n        .join('')\n    );\n    \n    const payload = JSON.parse(jsonPayload);\n    const currentTime = Math.floor(Date.now() / 1000);\n    \n    console.log('üîç Token payload:', payload);\n    console.log('üîç Current time:', currentTime);\n    console.log('üîç Token expires at:', payload.exp);\n    console.log('üîç Time until expiration:', payload.exp - currentTime, 'seconds');\n    \n    return payload.exp < currentTime;\n  } catch (error) {\n    console.error('‚ùå Error parsing token:', error);\n    return true; // Assume expired if we can't parse it\n  }\n};\n\nexport const getTokenTimeUntilExpiration = (token: string): number => {\n  try {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n      atob(base64)\n        .split('')\n        .map((c) => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2))\n        .join('')\n    );\n    \n    const payload = JSON.parse(jsonPayload);\n    const currentTime = Math.floor(Date.now() / 1000);\n    \n    return payload.exp - currentTime; // seconds until expiration\n  } catch (error) {\n    return 0;\n  }\n};"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,cAAc,GAAIC,KAAa,IAAc;EACxD,IAAI;IACF;IACA,MAAMC,SAAS,GAAGD,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACrC,MAAMC,MAAM,GAAGF,SAAS,CAACG,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;IAC9D,MAAMC,WAAW,GAAGC,kBAAkB,CACpCC,IAAI,CAACJ,MAAM,CAAC,CACTD,KAAK,CAAC,EAAE,CAAC,CACTM,GAAG,CAAEC,CAAC,IAAK,GAAG,GAAG,CAAC,IAAI,GAAGA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CACjEC,IAAI,CAAC,EAAE,CACZ,CAAC;IAED,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACX,WAAW,CAAC;IACvC,MAAMY,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAEjDC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAET,OAAO,CAAC;IACzCQ,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEN,WAAW,CAAC;IAC5CK,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAET,OAAO,CAACU,GAAG,CAAC;IAChDF,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAET,OAAO,CAACU,GAAG,GAAGP,WAAW,EAAE,SAAS,CAAC;IAE9E,OAAOH,OAAO,CAACU,GAAG,GAAGP,WAAW;EAClC,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,OAAO,IAAI,CAAC,CAAC;EACf;AACF,CAAC;AAED,OAAO,MAAMC,2BAA2B,GAAI1B,KAAa,IAAa;EACpE,IAAI;IACF,MAAMC,SAAS,GAAGD,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACrC,MAAMC,MAAM,GAAGF,SAAS,CAACG,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;IAC9D,MAAMC,WAAW,GAAGC,kBAAkB,CACpCC,IAAI,CAACJ,MAAM,CAAC,CACTD,KAAK,CAAC,EAAE,CAAC,CACTM,GAAG,CAAEC,CAAC,IAAK,GAAG,GAAG,CAAC,IAAI,GAAGA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CACjEC,IAAI,CAAC,EAAE,CACZ,CAAC;IAED,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACX,WAAW,CAAC;IACvC,MAAMY,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAEjD,OAAOP,OAAO,CAACU,GAAG,GAAGP,WAAW,CAAC,CAAC;EACpC,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACd,OAAO,CAAC;EACV;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}