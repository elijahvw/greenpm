# Cloud Build configuration for Green PM Frontend
steps:
  # Install dependencies and build
  - name: 'node:18-alpine'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        npm install
        npm run build
    env:
      - 'REACT_APP_API_URL=https://greenpm-dev-backend-us-central1-greenpm.a.run.app'
      - 'REACT_APP_ENVIRONMENT=dev'

  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$BUILD_ID',
      '-t', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:latest',
      '.'
    ]

  # Push the Docker image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$BUILD_ID']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:latest']

  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Deploying ${_SERVICE_NAME} to ${_REGION} for ${_ENVIRONMENT} environment"
        gcloud run deploy ${_SERVICE_NAME} \
          --image gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$BUILD_ID \
          --region ${_REGION} \
          --platform managed \
          --allow-unauthenticated \
          --port 3000 \
          --memory 512Mi \
          --cpu 1 \
          --max-instances 5 \
          --set-env-vars ENVIRONMENT=${_ENVIRONMENT}

# Substitutions
substitutions:
  _SERVICE_NAME: 'greenpm-dev-frontend'
  _ENVIRONMENT: 'dev'
  _REGION: 'us-central1'

# Options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

# Timeout
timeout: '1200s'