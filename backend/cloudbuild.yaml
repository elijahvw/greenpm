# Cloud Build configuration for Green PM Backend
steps:
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$COMMIT_SHA',
      '-t', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:latest',
      '.'
    ]
    dir: 'backend'

  # Push the Docker image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$COMMIT_SHA']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:latest']

  # Run database migrations
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Get database URL from Secret Manager
        DB_URL=$(gcloud secrets versions access latest --secret="greenpm-${_ENVIRONMENT}-db-url")
        
        # Run migrations using Cloud Run Jobs (if available) or skip for now
        echo "Database migrations would run here"
        # TODO: Implement proper migration strategy

  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [
      'run', 'deploy', '${_SERVICE_NAME}',
      '--image', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$COMMIT_SHA',
      '--region', '${_REGION}',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--memory', '512Mi',
      '--cpu', '1',
      '--concurrency', '80',
      '--max-instances', '10',
      '--min-instances', '0',
      '--port', '8000',
      '--set-env-vars', 'ENVIRONMENT=${_ENVIRONMENT},PROJECT_ID=$PROJECT_ID',
      '--vpc-connector', 'greenpm-${_ENVIRONMENT}-connector',
      '--vpc-egress', 'private-ranges-only'
    ]

# Substitutions
substitutions:
  _ENVIRONMENT: 'dev'
  _SERVICE_NAME: 'greenpm-dev-backend'
  _REGION: 'us-central1'

# Options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

# Timeout
timeout: '1200s'